[---Properties와 Collections---]

Properties
-> 내부적으로 Hashtable(HashMap의 구버전)을 사용하며, key와 value를 String으로 저장
-> 주로 애플리케이션의 환경설정에 관련된 속성을 저장하는데 사용되며 파일로부터 편리하게 값을 읽고 쓸 수 있는 메소드를 제공한다

Properties() : Properties객체를 생성한다
Properties(Properties defaults) : 지정된 Preperties에 저장된 목록을 가진 Preperties객체를 생성한다
String getProperty(String key) : 지정된 키(key)의 값(value)를 리턴, 키를 못찾으면 defaultValue를 리턴
String getProperty(String key, String defaultValue)
void list(PrintStream out) : 지정된 printStream에 저장된 목록을 출력
void list(PrintWriter out) : 지정된 PrintWriter에 저장된 목록을 출력
void load(InputStream inStream) : 지정된 inputStream으로부터 목록을 읽어서 저장
void load(Reader reader) : 지정된 Reader로부터 목록을 읽어서 저장
void loadFromXML(InputStream in) : 지정된 inputStream으로부터 XML문서를 읽어서, XML문서에 저장된 목록을 읽어담는다
Enumeration propertyNames() : 목록의 키(key)가 담긴 Enumeration을 리턴
Objet setProperty(String key, String value) : 지정된 키와 값을 저장, 이미 존재하는 키면 새로운 값으로 바뀐다
void store(OutputStream out, String comments) : 저장된 목록을 지정된 OutputStream 또는 Writer에 출력한다,
comments는 목록에 대한 주석으로 저장된다
void store(Writer writer, String comments)
void storeToXML(OutputStream os, String comment) : 저장된 목록을 지정된 출력스트림에 XML문서로 출력한다,
comment는 목록에 대한 설명으로 저장된다
void storeToXML(OutputStram os, String comment, String encoding) : 저장된 목록을 지정된 출력스트림에 해당 인코딩의 XML문서로 출력한다,
comment는 목록에 대한 설명으로 저장
Set stringPropertyNames() : Properties에 저장되어 있는 모든 키를 Set에 담아 리턴

-> 파일내용에 한글을 저장하면 깨지는 경우가 있는데 xml파일에 저장하면 깨지지 않는다

-> 파일 입출력할 때 파일명에 경로를 지정해 줄 수 있다


Collections(컬렉션을 위한 메소드(static)를 제공)
1. 컬렉션 채우기, 복사, 정렬, 검색 : fill(), copy(), sort(), binarySearch() 등
2. 컬렉션의 동기화 : SynchronizedXXX()
3. 변경불가(readOnly) 컬렉션 만들기 : unmodifiableXXX() 변경하려하면 예외가 발생
4. 싱글톤 컬렉션 만들기 : singletonXXX() 싱글톤 컬렉션에는 하나의 데이터만 저장 가능함(remove메소드 사용은 가능하지만 작동은 안함)
static List singletonList(Object o)
static Set singleton(Object o) //singletonSet이 아님
static Map singletonMap(Object key, Object value)

5. 한 종류의 객체만 저장하는 컬렉션 만들기 : checkedXXX()
static Collection checkedCollection(Collection c, Class type)
static List checkedList(List list, Class type)
static Set checkedSet(Set s, Class type)
static Map checkedMap(Map m, Class keytype, Class valueType)
static Queue checkedQueue(Queue queue, Class type)
static NavigableSet checkedNavigableSet(NavigableSet s, Class type)
static SortedSet checkedSortedSet(SortedSet s, Class type)
static NavigableMap checkedNavigableMap(NavigableMap m, Class keyType, Class valueType)
static SortedMap checkedSortedMap(SortedMap m, Class keyType, Class valueType)

JDK1.5부터 제네렉스가 도입되어서 사실 크게 필요없지만 1.5 이전의 버전을 사용할 때는 필요하다

어떤 클래스의 인스턴스가 존재하지 않는다 클래스를 호출해야 할때 클래스명.class로 호출할 수 있다